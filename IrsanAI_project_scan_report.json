{
  "scan_timestamp": "2025-08-29T14:04:54.961382",
  "scanner_version": "1.0",
  "project_root": "C:\\Users\\%username%\\PycharmProjects\\IrsanAI_LRP",
  "total_files": 19,
  "total_directories": 6,
  "ignored_files": 2,
  "ignored_directories": 0,
  "kept_files": 19,
  "kept_directories": 6,
  "file_types": {
    "": 2,
    ".py": 4,
    ".json": 4,
    ".md": 6,
    ".txt": 1,
    ".js": 1,
    ".html": 1
  },
  "suspicious_files": [],
  "recommendations": {
    "gitignore_entries": [
      ".idea/",
      "IrsanAI_github_optimizer.log"
    ],
    "delete_candidates": [],
    "rename_candidates": [],
    "move_candidates": [],
    "create_candidates": [],
    "fix_candidates": [
      {
        "path": ".gitignore",
        "reason": "Wichtige Projektdatei",
        "severity": "low"
      },
      {
        "path": "README.md",
        "reason": "Wichtige Projektdatei",
        "severity": "low"
      },
      {
        "path": ".github",
        "reason": "Wichtiges Projektverzeichnis",
        "severity": "low"
      },
      {
        "path": ".IrsanAI",
        "reason": "Wichtiges Projektverzeichnis",
        "severity": "low"
      },
      {
        "path": "lrp-protocol",
        "reason": "Wichtiges Projektverzeichnis",
        "severity": "low"
      },
      {
        "path": "web-tool",
        "reason": "Wichtiges Projektverzeichnis",
        "severity": "low"
      }
    ],
    "rule_violations": [],
    "additional_notes": []
  },
  "directory_structure": {
    ".github": {},
    ".IrsanAI": {},
    "irsanai-system": {
      "templates": {}
    },
    "lrp-protocol": {},
    "web-tool": {}
  },
  "file_analysis": {
    ".gitignore": {
      "type": "Unbekannt",
      "size": 833,
      "anonymized_id": "67f90ae582e10e5b",
      "content_preview": "# Generated by IrsanAI GitHub Repository Optimizer v1.0 # Do not edit manually - this file is automatically generated  # IDE-spezifische Dateien .idea/ .vscode/ .project .c9/ .metadata/  # Build/Cache-Dateien __pycache__/ *.pyc *.pyo *.pyd *.typed build/ dist/ *.egg-info/ .pytest_cache/ .mypy_cache/  # Virtuelle Umgebungen venv/ env/ virtualenv/ .venv/  # Temporre Dateien *.tmp *.temp *.swp *.swo *~ Thumbs.db .DS_Store  # Lokale Konfigurationsdateien .env .env.local .env.*.local  # Log-Dateien *"
    },
    "github_repo_preparer.py": {
      "type": "Python",
      "size": 20601,
      "anonymized_id": "60c5e90da5127f1a",
      "content_preview": ""
    },
    "IrsanAI_github_optimization_report.json": {
      "type": "JSON",
      "size": 11476,
      "anonymized_id": "59b26dcb3f429aed",
      "content_preview": ""
    },
    "IrsanAI_project_scan_report.json": {
      "type": "JSON",
      "size": 11474,
      "anonymized_id": "a2f8616835bdbd60",
      "content_preview": ""
    },
    "README.md": {
      "type": "Markdown",
      "size": 3528,
      "anonymized_id": "532b3b0dd5227400",
      "content_preview": "# IrsanAI-LRP v1.2 \u2013 ONLY-ONE-PROMPT SYSTEM   *Ein standardisiertes Protokoll f\u00fcr fehlerfreie LLM-Kommunikation mit Hardware-Optimierung*  ![IrsanAI-LRP Workflow](https://i.imgur.com/8ZkR7lP.png)  ## \ud83c\udf10 WAS IST IrsanAI-LRP?   IrsanAI-LRP ist ein **\"Only-One-Prompt\"-System** f\u00fcr die Entwicklung von LLM-generiertem Code mit **verpflichtender Umweltanalyse**. Es stellt sicher, dass:   \u2705 **NUR EIN Prompt** den gesamten Prozess startet   \u2705 Der generierte Code **perfekt auf deine Hardware optimiert** i"
    },
    "scanning_environment.py": {
      "type": "Python",
      "size": 16563,
      "anonymized_id": "97884851737f2d5e",
      "content_preview": ""
    },
    "test-requirements.txt": {
      "type": "Text",
      "size": 134,
      "anonymized_id": "c339f00d5b1fa300",
      "content_preview": "r\u0000e\u0000q\u0000u\u0000e\u0000s\u0000t\u0000s\u0000=\u0000=\u00002\u0000.\u00003\u00001\u0000.\u00000\u0000 \u0000 \u0000p\u0000s\u0000u\u0000t\u0000i\u0000l\u0000=\u0000=\u00005\u0000.\u00009\u0000.\u00005\u0000 \u0000 \u0000s\u0000c\u0000r\u0000e\u0000e\u0000n\u0000i\u0000n\u0000f\u0000o\u0000=\u0000=\u00000\u0000.\u00008\u0000 \u0000 \u0000p\u0000y\u0000n\u0000v\u0000m\u0000l\u0000=\u0000=\u00001\u00001\u0000.\u00005\u0000.\u00000\u0000 \u0000 \u0000"
    },
    ".github\\CONTRIBUTING.md": {
      "type": "Markdown",
      "size": 3468,
      "anonymized_id": "4c4b53b08761fa83",
      "content_preview": "{   \"$schema\": \"http://json-schema.org/draft-07/schema#\",   \"title\": \"IrsanAI Report Schema\",   \"description\": \"JSON-Schema f\u00fcr IrsanAI-Report-Dateien\",   \"type\": \"object\",   \"properties\": {     \"status\": {       \"type\": \"string\",       \"enum\": [\"success\", \"challenges\", \"error\"],       \"description\": \"Gesamtstatus des Reports\"     },     \"timestamp\": {       \"type\": \"string\",       \"format\": \"date-time\",       \"description\": \"Zeitpunkt der Report-Erstellung\"     },     \"report_version\": {"
    },
    ".github\\ROADMAP.md": {
      "type": "Markdown",
      "size": 1039,
      "anonymized_id": "72aa82e516664d0a",
      "content_preview": "# \ud83d\uddfa\ufe0f IrsanAI-LRP ROADMAP  ## \ud83d\ude80 V1.2 (AKTUELL) \u2013 MVP-FAHIG - [x] Only-One-Prompt-Prinzip implementiert - [x] OS/HW-Detector mit DSGVO-Konformit\u00e4t - [x] Web-UI f\u00fcr LRP-Dokument-Generierung - [x] Einfacher Validator f\u00fcr LRP-Dokumente - [x] Inkrementelles Update-System  ## \ud83d\udcc5 V1.3 (N\u00c4CHSTE VERSION) \u2013 ERWEITERUNGEN - [ ] GitHub Actions f\u00fcr automatische Validierung - [ ] Community-Vorlagen in `templates/` Ordner - [ ] CLI-Tool f\u00fcr fortgeschrittene Nutzer - [ ] Erweiterte Fehleranalyse im Update-System"
    },
    ".IrsanAI\\.gitkeep": {
      "type": "Unbekannt",
      "size": 0,
      "anonymized_id": "9beea64e5c3aa8da",
      "content_preview": ""
    },
    ".IrsanAI\\README.md": {
      "type": "Markdown",
      "size": 827,
      "anonymized_id": "567687ac19279cb4",
      "content_preview": "# .IrsanAI Verzeichnis  Dieses Verzeichnis wird zur Laufzeit bef\u00fcllt und sollte im GitHub-Repository **NUR** folgende Dateien enthalten:  - `.gitkeep` - Leere Datei zur Erhaltung der Verzeichnisstruktur - `README.md` - Diese Datei  ## Wichtige Hinweise  - **NIEMALS** manuell Dateien in dieses Verzeichnis hinzuf\u00fcgen. - Alle Inhalte werden automatisch bei der Ausf\u00fchrung generiert:   - `IrsanAI_OS_HW_Detector.py`   - `IrsanAI_project-run.py`   - `IrsanAI_report.json` - Dieses Verzeichnis ist wichti"
    },
    "irsanai-system\\IrsanAI_error_report.json": {
      "type": "JSON",
      "size": 272,
      "anonymized_id": "f1720390e5ea7ee1",
      "content_preview": "{   \"status\": \"error\",   \"timestamp\": \"2025-08-27T11:55:25.683026\",   \"detector_version\": \"2.2\",   \"error_message\": \"[WinError 3] Das System kann den angegebenen Pfad nicht finden: ''\",   \"error_type\": \"FileNotFoundError\",   \"traceback\": \"Verf\u00fcgbar in Log-Datei\" }"
    },
    "irsanai-system\\IrsanAI_Minor_Update.py": {
      "type": "Python",
      "size": 3378,
      "anonymized_id": "05497aaef3b6e764",
      "content_preview": "# IrsanAI_Minor_Update.py # IrsanAI-LRP v1.2 | Unique-Key: ENC(9f8a7b6c, AES-256) | Contributor: Qwen#5 # CHANGELOG: v1.0 - Erstellt f\u00fcr task_id=usr_20250828_1100_9f8a7b6c  # PATCH-INSTRUKTIONEN (AUTOMATISCH GENERIERT) TARGET_FILE = \"IrsanAI_project-run.py\" BACKUP_VERSION = \"v2.2.1b\"  # Sicherheitscheck vor Modifikation VERIFICATION_HASH = \"sha256:9f8a7b6c5d4e3f2a1b0c9d8e7f6a5b4c3d2e1f0a9b8c7d6e5f4a3b2c1d0e\"  # Pr\u00e4zise \u00c4nderungsanweisungen PATCH_INSTRUCTIONS = [     {         \"search_pattern\": r"
    },
    "irsanai-system\\IrsanAI_OS_HW_Detector.py": {
      "type": "Python",
      "size": 34938,
      "anonymized_id": "282a3395bd1733e8",
      "content_preview": ""
    },
    "irsanai-system\\IrsanAI_report_schema.json": {
      "type": "JSON",
      "size": 3468,
      "anonymized_id": "ecefba382e787aed",
      "content_preview": "{   \"$schema\": \"http://json-schema.org/draft-07/schema#\",   \"title\": \"IrsanAI Report Schema\",   \"description\": \"JSON-Schema f\u00fcr IrsanAI-Report-Dateien\",   \"type\": \"object\",   \"properties\": {     \"status\": {       \"type\": \"string\",       \"enum\": [\"success\", \"challenges\", \"error\"],       \"description\": \"Gesamtstatus des Reports\"     },     \"timestamp\": {       \"type\": \"string\",       \"format\": \"date-time\",       \"description\": \"Zeitpunkt der Report-Erstellung\"     },     \"report_version\": {"
    },
    "lrp-protocol\\LRP_v1.2_Core_Specification.md": {
      "type": "Markdown",
      "size": 5537,
      "anonymized_id": "7b8557ccfccc10fb",
      "content_preview": "```markdown # LRP_v1.2_Core_Specification.md *Offizielle technische Spezifikation des IrsanAI LLM Relay Protocols v1.2*  ---  ## 1. EINLEITUNG ### 1.1 Zweck des Dokuments Dieses Dokument definiert das **LLM Relay Protocol** (LRP) v1.2, ein standardisiertes Kommunikationsprotokoll f\u00fcr fehlerfreie Interaktion zwischen Benutzern und Online-LLMs.  ### 1.2 Was macht IrsanAI-LRP einzigartig? - **PRE-Selector System**: Intelligente Vorpr\u00fcfung, ob Hardware-Erkennung n\u00f6tig ist (0% im Markt) - **Universel"
    },
    "web-tool\\environment_report_validator.js": {
      "type": "JavaScript",
      "size": 2670,
      "anonymized_id": "cd0c13ca10eb6b6f",
      "content_preview": "/**  * LRP v1.2 Compliance Validator (MVP-Version)  * \u00dcberpr\u00fcft die Konformit\u00e4t von LRP-Dokumenten mit der Core-Spezifikation  */  function validateLRP(lrpText) {     const errors = [];     let complianceScore = 100;      // 1. Pr\u00fcfe Metadaten-Struktur     if (!lrpText.includes('## METADATEN (MASCHINENLESBAR)')) {         errors.push(\"Metadaten-Block fehlt\");         complianceScore -= 30;     }      // 2. Pr\u00fcfe YAML-Struktur     const yamlMatch = lrpText.match(/```yaml\\n([\\s\\S]*?)\\n```/);     i"
    },
    "web-tool\\index.html": {
      "type": "HTML",
      "size": 14862,
      "anonymized_id": "203fd9fd3adec55a",
      "content_preview": ""
    },
    "web-tool\\README.md": {
      "type": "Markdown",
      "size": 1489,
      "anonymized_id": "a52930669a7969a6",
      "content_preview": "# IrsanAI Environment Report Validator & Prompt Generator  ## Verwendung 1. **\u00d6ffne die Web-UI**: \u00d6ffne `web-tool/index.html` in deinem Browser 2. **Definiere dein Vorhaben**: Gib dein Projektvorhaben in der Web-Oberfl\u00e4che ein 3. **Kopiere den Prompt**: Die Oberfl\u00e4che generiert automatisch die Markdown-Grundstruktur 4. **F\u00fcge in LLM ein**: Kopiere diese Struktur in dein Online-LLM (ChatGPT, Claude, etc.) 5. **Erhalte Hardware-Detektor**: Das LLM generiert `IrsanAI_OS_HW_Detector.py` als ERSTEN S"
    }
  }
}